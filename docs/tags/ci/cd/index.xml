<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CI/CD on kflansburg.com</title>
    <link>/tags/ci/cd/</link>
    <description>Recent content in CI/CD on kflansburg.com</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Kevin Flansburg</copyright>
    <lastBuildDate>Sat, 01 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/ci/cd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Detecting Undefined Behavior in Rust with Miri in GitHub Actions</title>
      <link>/posts/improving-rust-codebase-quality-with-miri-in-ci/</link>
      <pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate>
      <guid>/posts/improving-rust-codebase-quality-with-miri-in-ci/</guid>
      <description>&lt;p&gt;Miri is an interpreter for Rust&amp;rsquo;s mid-level intermediate representation (MIR), which allows for the detection of undefined behavior and other errors at compile time. Integrating Miri into Continuous Integration (CI) workflows can significantly improve the quality of a Rust codebase by catching errors early in the development process. This can be especially important if your codebase requires the use of unsafe blocks of Rust code which may prevent the Rust compiler from catching bugs that you would normally expect it to.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
