<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wasm on kflansburg.com</title>
    <link>https://kflansburg.com/tags/wasm/</link>
    <description>Recent content in Wasm on kflansburg.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Kevin Flansburg</copyright>
    <lastBuildDate>Wed, 03 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kflansburg.com/tags/wasm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Thoughts on WIT and wit-bindgen</title>
      <link>https://kflansburg.com/posts/wit-and-wit-bindgen-thoughts/</link>
      <pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kflansburg.com/posts/wit-and-wit-bindgen-thoughts/</guid>
      <description>&lt;p&gt;The Wasm component model uses WIT to define runtime APIs available to guest
components. &lt;code&gt;wit-bindgen&lt;/code&gt; can then be used by both guest component authors
and host platforms to generate bindings in their language of choice to
consume or implement these runtime APIs respectively. This post discusses
some of the rough edges encountered when taking this for a spin.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
