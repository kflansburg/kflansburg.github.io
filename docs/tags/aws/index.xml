<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS on kflansburg.com</title>
    <link>/tags/aws/</link>
    <description>Recent content in AWS on kflansburg.com</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Kevin Flansburg</copyright>
    <lastBuildDate>Thu, 26 Nov 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust Continuous Delivery</title>
      <link>/posts/rust-continuous-delivery/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      <guid>/posts/rust-continuous-delivery/</guid>
      <description>&lt;p&gt;Over the last few years I have iterated several times on continuous delivery&#xA;pipelines for Rust applications. Designing these pipelines involves balancing&#xA;a number of factors including cost, complexity, ergonomics, and rigor. In this&#xA;post I will describe several of these iterations, lessons learned, and share my&#xA;most recent solution in detail.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
